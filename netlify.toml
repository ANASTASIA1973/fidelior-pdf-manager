# netlify.toml — Fidelior PDF Manager (statisches Frontend + Functions)

[build]
  command   = ""                     # kein Build-Schritt
  publish   = "."                    # Root veröffentlichen
  functions = "netlify/functions"    # Functions-Verzeichnis

[build.environment]
  NODE_VERSION = "20"

[functions]
  node_bundler   = "esbuild"
  # Falls Functions JSON/Assets aus dem Repo brauchen (z. B. Adressbuch etc.):
  included_files = ["config/**"]     # ggf. entfernen, wenn nicht benötigt

[[plugins]]
  package = "@netlify/plugin-functions-install-core"

# -------- Redirects --------
# Bequemer API-Pfad: /api/... -> /.netlify/functions/...
[[redirects]]
  from = "/api/*"
  to   = "/.netlify/functions/:splat"
  status = 200

# -------- Caching-Strategie --------
# JS/CSS nicht hart cachen → schnelle Updates ohne Hard-Reload
[[headers]]
  for = "/*.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

[[headers]]
  for = "/*.css"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# Falls du CSS/JS auch in Unterordnern hast, ergänze:
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

[[headers]]
  for = "/css/*"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"

# JSON IMMER FRISCH (Dropdowns etc. nie stale)
[[headers]]
  for = "/*.json"
  [headers.values]
    Cache-Control = "no-store"

# Optional: PDF.js Worker nicht hart cachen
[[headers]]
  for = "/pdf.worker.min.js"
  [headers.values]
    Cache-Control = "public, max-age=0, must-revalidate"
